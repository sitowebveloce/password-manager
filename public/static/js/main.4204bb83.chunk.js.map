{"version":3,"sources":["bg.mp4","arrows.png","Component/Login.js","Component/Signup.js","Component/Table.js","Component/Add.js","Component/Search.js","Component/Manager.js","Component/Nav.js","Component/Footer.js","Component/Flash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","memo","props","setLogin","loginPost","useState","emailTemp","setEmailTemp","passTemp","setPassTemp","className","onSubmit","e","preventDefault","email","password","onClick","role","aria-label","htmlFor","type","placeholder","id","value","onChange","target","required","setSignup","whoisin","setMessages","confirmTemp","setConfTemp","secret","setSecret","fetchPost","user","a","axios","post","then","response","msg","data","success","catch","error","errRes","request","handleMessages","err","test","push","length","process","name","date","idDb","fetchArchives","setType","passDecry","setPassDecry","enableit","setEnableit","del","setDel","fetchPass","token","fetchData","res","console","log","status","message","config","deleteArchive","url","submitEdit","handleEdit","disabled","Date","toLocaleDateString","day","month","year","setAdd","username","setName","setUser","setPassword","addPassword","dataToAdd","addPass","autoComplete","setSearching","search","setSearch","fetchSearch","searchres","setSearchres","handleSubmit","add","archives","setArchives","useEffect","map","key","_id","createdAt","Nav","handleLogOut","handleLogin","Footer","Flash","messages","visibility","setVisibility","msgs","m","indx","setTimeout","document","querySelector","addEventListener","App","login","signup","setUsername","whoisFetch","userIn","logoutRequest","src","video","autoPlay","muted","loop","arrow","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4204bb83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.76ca5dbd.mp4\";","module.exports = __webpack_public_path__ + \"static/media/arrows.e96b3387.png\";","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction Login(props) {\r\n    const {setLogin, loginPost} = props;\r\n    //\r\n    // ─── STATE ──────────────────────────────────────────────────────────────────────\r\n    const [emailTemp, setEmailTemp] = React.useState('');\r\n    const [passTemp, setPassTemp] = React.useState('');\r\n\r\n    // Handle Close\r\n    const handleClose = ()=>{\r\n        setLogin(false)\r\n    }\r\n\r\n    // Handle Submit\r\n    const handleSubmit = (e)=>{\r\n        // Prevent page reload\r\n        e.preventDefault();\r\n        \r\n        // Create user obj\r\n        let usr = {email: emailTemp, password:passTemp}\r\n        // Login\r\n        loginPost(usr);\r\n    }\r\n\r\n    //\r\n    // ─── RETURN ─────────────────────────────────────────────────────────────────────\r\n    \r\n    return (\r\n        <div>\r\n            \r\n            <div className=\"loginFormDiv\">\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleSubmit} className='form'>\r\n            <div className=\"close\" onClick={handleClose}><span role='img' aria-label='close'>❌</span></div>\r\n                <fieldset>\r\n                    <label htmlFor=\"emailField\">Email</label>\r\n                    <input \r\n                    type=\"text\"\r\n                    placeholder='Email'\r\n                    id='emailField'\r\n                    value={emailTemp}\r\n                    onChange={e=> setEmailTemp(e.target.value)}\r\n                    required\r\n                    />\r\n                    <label htmlFor=\"passwordField\">Password</label>\r\n                    <input \r\n                    type=\"password\"\r\n                    placeholder='Password'\r\n                    id='passwordField'\r\n                    value={passTemp}\r\n                    onChange={e => setPassTemp(e.target.value)}\r\n                    required\r\n                    />\r\n                   <div className='textCenter'>\r\n                       <button className=\"button-small\">Submit</button>\r\n                       </div> \r\n                </fieldset>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// Export with memo\r\nexport default React.memo(Login);","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction Signup(props) {\r\n    const {setSignup, whoisin, setMessages} = props;\r\n    //\r\n    // ─── STATE ──────────────────────────────────────────────────────────────────────\r\n    const [emailTemp, setEmailTemp] = React.useState('');\r\n    const [passTemp, setPassTemp] = React.useState('');\r\n    const [confirmTemp, setConfTemp] = React.useState('');\r\n    const [secret, setSecret] = React.useState('');\r\n    //\r\n    // ─── FETCH ──────────────────────────────────────────────────────────────────────\r\n    const fetchPost = async (user)=>{\r\n        let url = '/user/signup';\r\n        await axios\r\n        .post(url, user)\r\n        .then(response =>{\r\n            // Flash message\r\n            // console.log(response.data);\r\n            setMessages([{msg: response.data.msg}])\r\n            // Set who is in \r\n            if(response.data.success === true){\r\n                whoisin();\r\n            }\r\n        })\r\n        .catch(error =>{\r\n            if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n               //  console.log(error.response.data);\r\n               const errRes = error.response.data.data;\r\n               setMessages([errRes]);\r\n               \r\n                //console.log(error.response.status);\r\n                // console.log(error.response.headers);\r\n              } else if (error.request) {\r\n                // The request was made but no response was received\r\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                // http.ClientRequest in node.js\r\n                 // console.log(error.request);\r\n              } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                // console.log('Error', error.message);\r\n              }\r\n              // console.log(error.config);\r\n        })\r\n    }\r\n    \r\n    //\r\n    // ─── HANDLE CLOSE ───────────────────────────────────────────────────────────────\r\n            \r\n    const handleClose = ()=>{\r\n        setSignup(false);\r\n    }\r\n\r\n    //\r\n    // ─── SET ALERT MESSAGES ─────────────────────────────────────────────────────────\r\n    let handleMessages = (err)=>{\r\n        //\r\n        setMessages(err)\r\n\r\n    }\r\n     //\r\n    // ─── HANDLE SUBMIT ──────────────────────────────────────────────────────────────\r\n               \r\n     const handleSubmit = (e)=>{\r\n        // Prevent page reload\r\n        e.preventDefault();\r\n        // Validation\r\n        let err = [];\r\n\r\n        if(!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/).test(emailTemp)){\r\n            let msg = {msg: '⚠️ Email invalid.'};\r\n            err.push(msg)\r\n        }\r\n        if(passTemp.length <= 8){\r\n            let msg = {msg: '⚠️ Password min 8.'};\r\n            err.push(msg);\r\n        }\r\n        if(!(/[A-Z]/).test(passTemp)){\r\n            let msg = {msg: '⚠️ Password uppercase.'}\r\n            err.push(msg);\r\n        }\r\n        if(!(/\\W/).test(passTemp)){\r\n            let msg = {msg: '⚠️ Password alphas.'}\r\n            err.push(msg);\r\n        }\r\n        if(!(/\\d/).test(passTemp)){\r\n            let msg = {msg: '⚠️ Password numeric.'}\r\n            err.push(msg);\r\n        }\r\n        if(passTemp !== confirmTemp){\r\n            let msg = {msg: '⚠️ Password must be =.'}\r\n            err.push(msg);\r\n        }\r\n        if(secret !== process.env.REACT_APP_SIGNUP_SECRET){\r\n            let msg = {msg: '⚠️ Insert a valid secret key 🗝️.'} \r\n            err.push(msg);\r\n        }\r\n        // Return message\r\n        if(err.length > 0){\r\n            // Set Messages\r\n          return handleMessages(err)\r\n        }        \r\n        \r\n        // Clear/empty error array and field\r\n        err.length = 0;\r\n        handleMessages([]);\r\n        setEmailTemp('');\r\n        setPassTemp('');\r\n        setConfTemp('');\r\n        setSecret('');\r\n\r\n        // Prepare user object\r\n        let user = {\r\n            email: emailTemp,\r\n            password: passTemp\r\n        }\r\n        // Fetch post data\r\n        fetchPost(user)\r\n    }\r\n  \r\n    //\r\n    // ─── RETURN ─────────────────────────────────────────────────────────────────────\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"signupFormDiv\">\r\n            <h1>Register</h1>\r\n            <form onSubmit={handleSubmit} className='form'>\r\n            <div className=\"close\" onClick={handleClose}><span role='img' aria-label='close'>❌</span></div>\r\n                <fieldset>\r\n                    <label htmlFor=\"emailField\">Email</label>\r\n                    <input \r\n                    type=\"email\"\r\n                    placeholder='Email'\r\n                    id='emailField'\r\n                    value={emailTemp}\r\n                    onChange={e=> setEmailTemp(e.target.value)}\r\n                    required\r\n                    />\r\n                    <label htmlFor=\"passwordField\">Password</label>\r\n                    <input \r\n                    type=\"password\"\r\n                    placeholder='Password'\r\n                    id='passwordField'\r\n                    value={passTemp}\r\n                    onChange={e => setPassTemp(e.target.value)}\r\n                    required\r\n                    />\r\n                    <label htmlFor=\"confirmField\">Confirm</label>\r\n                    <input \r\n                    type=\"password\"\r\n                    placeholder='Confirm'\r\n                    id='confirmField'\r\n                    value={confirmTemp}\r\n                    onChange={e => setConfTemp(e.target.value)}\r\n                    required\r\n                    />\r\n                    <label htmlFor=\"secret\">Secret</label>\r\n                    <input \r\n                    type=\"password\"\r\n                    placeholder='secret'\r\n                    id='secret'\r\n                    value={secret}\r\n                    onChange={e=> setSecret(e.target.value)}\r\n                    required\r\n                    />\r\n                   <div className='textCenter'>\r\n                       <button className=\"button-small\">Submit</button>\r\n                       </div> \r\n                </fieldset>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Export with memo\r\nexport default React.memo(Signup);","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Table(props) {\r\n    const { name, user, password,date, idDb, fetchArchives, setMessages} = props;\r\n    \r\n    //\r\n    // ─── STATE ──────────────────────────────────────────────────────────────────────\r\n    const [type, setType] = React.useState('password');\r\n    const [passDecry, setPassDecry] = React.useState('...');\r\n    const [id, setIdDb] = React.useState(idDb);\r\n    const [enableit, setEnableit ] = React.useState(true);\r\n    const [del, setDel] = React.useState(false);\r\n    \r\n     //\r\n    // ─── FETCH PASS ─────────────────────────────────────────────────────────────────\r\n    const fetchPass = async (token)=>{\r\n        try {\r\n            let url = `/decryptval`;\r\n            let fetchData = await axios.post(url,{id: `${token}`});\r\n            let res = await fetchData.data;\r\n             // console.log(res);\r\n            if(res.success === true){\r\n              setPassDecry(res.data.password);\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n            \r\n                // console.log(error.response.headers);\r\n              } else if (error.request) {\r\n                // The request was made but no response was received\r\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                // http.ClientRequest in node.js\r\n                // console.log(error.request);\r\n              } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                 console.log('Error', error.message);\r\n              }\r\n              console.log(error.config);\r\n        }\r\n    }\r\n\r\n    //\r\n    // ─── DELETE DATA ────────────────────────────────────────────────────────────────\r\n    const deleteArchive = async (id)=>{\r\n        //console.log(id);\r\n        try {\r\n            let url = `/delarchive/${id}`;\r\n            let fetchData = await axios(url);\r\n            let res = await fetchData.data;\r\n            // console.log(res);\r\n            if(res.success === true){\r\n              fetchArchives();\r\n              setMessages([{msg:'🗑️ deleted.'}])\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                // console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                // console.log(error.response.headers);\r\n              } else if (error.request) {\r\n                // The request was made but no response was received\r\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                // http.ClientRequest in node.js\r\n                // console.log(error.request);\r\n              } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                // console.log('Error', error.message);\r\n              }\r\n              // console.log(error.config);\r\n              // console.log(JSON.parse(error.config.data));\r\n        }\r\n    }\r\n\r\n    //\r\n    // ─── DELETE DATA ────────────────────────────────────────────────────────────────\r\n    const submitEdit = async (id)=>{\r\n      //console.log(id);\r\n      try {\r\n          let url = `/editpass`;\r\n          let fetchData = await axios.post(url, {id:id, password: `${passDecry}`});\r\n          let res = await fetchData.data;\r\n          // console.log(res);\r\n          if(res.success === true){\r\n            fetchArchives()\r\n          }\r\n      } catch (error) {\r\n          if (error.response) {\r\n              // The request was made and the server responded with a status code\r\n              // that falls out of the range of 2xx\r\n              // console.log(error.response.data);\r\n              console.log(error.response.status);\r\n              // console.log(error.response.headers);\r\n            } else if (error.request) {\r\n              // The request was made but no response was received\r\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n              // http.ClientRequest in node.js\r\n              // console.log(error.request);\r\n            } else {\r\n              // Something happened in setting up the request that triggered an Error\r\n              // console.log('Error', error.message);\r\n            }\r\n            // console.log(error.config);\r\n            // console.log(JSON.parse(error.config.data));\r\n      }\r\n  }\r\n\r\n     //\r\n    // ─── CHANGE INPUT TYPE ──────────────────────────────────────────────────────────\r\n    const handleShow = ()=>{\r\n        fetchPass(`${password}`);\r\n        if(type === 'password'){\r\n          setMessages([{msg:'🔓 unlock.'}]);\r\n        return setType('text');\r\n        }\r\n\r\n        setMessages([{msg:'🔐 Lock.'}])\r\n        setType('password');\r\n    }\r\n\r\n     // Handle Confirm\r\n     function handleConfirm(){\r\n      setDel(true);\r\n      setMessages([{msg:'❌ Confirm deletion.'}])\r\n    }\r\n    //\r\n    // ─── HANDLE DELETE ──────────────────────────────────────────────────────────────\r\n  function handleDel(){\r\n        // console.log(id)\r\n        deleteArchive(id);\r\n        // Set Delete false\r\n        setDel(false);\r\n    }\r\n\r\n    //\r\n    // ─── HANDLE EDIT ─────────────────────────────────────────────────\r\n    function handleEdit(){\r\n     // console.log(id)\r\n     setEnableit(!enableit);\r\n     if(!enableit){\r\n       // Submit new data\r\n       submitEdit(id);\r\n      return setMessages([{msg:'🗄️ Archivied.'}])\r\n     }\r\n     return setMessages([{msg:'🗃️  Archive open.'}])\r\n    }\r\n    //\r\n    // ─── RETURN ─────────────────────────────────────────────────────────────────────\r\n\r\n    return (\r\n            <>\r\n                <tbody>\r\n                    <tr>\r\n                    <td>{name}</td>\r\n                    <td>{user}</td>\r\n                    <td> <input \r\n                    className='noboders' \r\n                    disabled={enableit} \r\n                    type={type} \r\n                    value={passDecry}\r\n                    onChange={e=> setPassDecry(e.target.value)}\r\n                    /></td>\r\n                    <td className='tableDate'>{\r\n                   new Date(date).toLocaleDateString('it-IT', {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\"\r\n                    // ,hour: \"numeric\",\r\n                    // minute: \"numeric\"\r\n                   })\r\n                    }</td>\r\n                    <td>\r\n                    <small className='eyeTable'> \r\n                    <span className='emojis' onClick={handleShow} role='img' aria-label='view'>👁️</span>\r\n                    {!enableit ? \r\n                    <span className='emojis' onClick={handleEdit} role='img' aria-label='edit'>🔫</span>\r\n                      :\r\n                    <span className='emojis' onClick={handleEdit} role='img' aria-label='edit'>🖊️</span>\r\n                    \r\n                    } \r\n                    {\r\n                      del ?  \r\n                    <span className='emojis' onClick={handleDel} role='img' aria-label='edit'>❌</span> \r\n                      :\r\n                      <span className='emojis' onClick={handleConfirm} role='img' aria-label='edit'>❎</span>\r\n                    }\r\n                    </small>\r\n                    </td>\r\n                    </tr>\r\n                </tbody>\r\n        </>\r\n    )\r\n}\r\n\r\n// Export with memo\r\nexport default React.memo(Table);","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction Add(props) {\r\n    const {setAdd, username, fetchArchives, setMessages} = props;   \r\n    //\r\n    // ─── STATE ──────────────────────────────────────────────────────────────────────\r\n    const [name, setName] = React.useState('');\r\n    const [user, setUser] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [type, setType] = React.useState('password');\r\n    \r\n    //\r\n    // ─── ADD FETCH ──────────────────────────────────────────────────────────────────\r\n    const addPassword = async ()=>{\r\n        try {\r\n            let url = '/hashcred';\r\n            // Obj\r\n            let dataToAdd = {\r\n                name: name,\r\n                username: username,\r\n                user: user,\r\n                password: password\r\n            }\r\n            let addPass = await axios.post(url, dataToAdd);\r\n            let res = addPass.data;\r\n            // console.log(res);\r\n            if(res.success === true){\r\n                // Refresh archives\r\n                    fetchArchives();\r\n                    setMessages([{msg:'📌 Addeded'}])\r\n            }\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            console.log(error.response.data);\r\n            //console.log(error.response.status);\r\n            // console.log(error.response.headers);\r\n          } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n            // console.log(error.request);\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            // console.log('Error', error.message);\r\n          }\r\n          // console.log(error.config);\r\n        }\r\n    }\r\n    \r\n    // Handle Submit\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        // Add\r\n        addPassword();\r\n        // Reset and clear\r\n        setName('');\r\n        setUser('');\r\n        setPassword('');\r\n        // Close Add \r\n        setAdd(false);\r\n    }\r\n\r\n    // Handle Show\r\n    const handleShow = ()=>{\r\n        // console.log(type)\r\n        if(type === 'password'){\r\n       return setType('text')\r\n        }\r\n        setType('password');\r\n    }\r\n    \r\n    //\r\n    // ─── RETURN ─────────────────────────────────────────────────────────────────────\r\n    return (\r\n        <div>\r\n            <div className=\"addFormDiv\">\r\n            <div className=\"addGridErrors\"> </div>\r\n            <h1>Add Password</h1>\r\n\r\n            <form autoComplete='off' onSubmit={handleSubmit} className=\"form\">\r\n            <fieldset>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input \r\n                type=\"text\" \r\n                id='name'\r\n                placeholder='Name'\r\n                value={name}\r\n                onChange={(e)=> setName(e.target.value)}\r\n                required\r\n                />\r\n\r\n                <label htmlFor=\"user\">User</label>\r\n                <input \r\n                type=\"text\"\r\n                placeholder='User'\r\n                id='user'\r\n                value={user}\r\n                onChange={(e)=>setUser(e.target.value)}\r\n                required\r\n                />\r\n\r\n                <label htmlFor=\"password\">Password \r\n                <small className='eye' onClick={handleShow}> \r\n                <span role='img' aria-label='eye'>👁️</span>\r\n                </small>\r\n                </label>\r\n                <input \r\n                type={type}\r\n                placeholder='Password'\r\n                id='password'\r\n                value={password}\r\n                onChange={(e)=>setPassword(e.target.value)}\r\n                required\r\n                />\r\n                <div></div>\r\n                <div className=\"textCenter\">\r\n                    <button className=\"button-small\">Submit</button>\r\n                </div>\r\n            </fieldset>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(Add);","import React from 'react'\r\n\r\nfunction Search(props) {\r\n    // STATE \r\n    const [searching, setSearching] = React.useState(false);\r\n    //\r\n    // ─── STATE FROM ABOVE ──────────────────────────────────────────────────────────────────────\r\n   const {search, setSearch, fetchSearch, searchres, setSearchres} = props;\r\n\r\n    // Handel Submit\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        // Fetch search\r\n        fetchSearch(search);\r\n        // Reset search\r\n        setSearch('');\r\n        // Set Searching\r\n        setSearching(true);\r\n    }\r\n\r\n    // Handle reset search\r\n    const handleReset = ()=>{\r\n         setSearchres([]);\r\n        setSearching(false);\r\n    }\r\n\r\n    //\r\n    // ─── RETURN ─────────────────────────────────────────────────────────────────────\r\n    \r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} >\r\n            <input \r\n            className='search-input'\r\n            placeholder='Search'\r\n            type=\"text\"\r\n            value={search}\r\n            onChange={e=> setSearch(e.target.value)}\r\n            /> <span onClick={handleSubmit} className='search-icon-container'> \r\n            {searchres.length > 0 ?\r\n            (\r\n            <>\r\n            <span onClick={handleSubmit} className='search-icon' role='img' aria-label='search'>🔍</span>\r\n            <span onClick={handleReset} className='search-icon' role='img' aria-label='close'>❌</span>\r\n            </>\r\n            )\r\n            :\r\n            <>\r\n            <span className='search-icon' role='img' aria-label='search'>🔍</span>\r\n           \r\n            </>\r\n            }\r\n            </span>\r\n            </form>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n// Export with memo\r\nexport default React.memo(Search);","import React from 'react'\r\nimport Table from './Table';\r\nimport Add from './Add';\r\nimport axios from 'axios';\r\nimport Search from './Search';\r\n\r\n\r\nfunction Manager(props) {\r\n    const {username, setMessages} = props;\r\n    const [add, setAdd] = React.useState(false);\r\n    const [search, setSearch] = React.useState('');\r\n    const [searchres, setSearchres] = React.useState([]);\r\n    //\r\n    // ─── FETCH DATA ─────────────────────────────────────────────────────────────────\r\n    const [archives, setArchives] = React.useState([]);\r\n\r\n    //\r\n    // ─── FETCH DATA ─────────────────────────────────────────────────────────────────\r\n    const fetchArchives = async ()=>{\r\n        try {\r\n            let url = `/archives/${username}`;\r\n            let fetchData = await axios(url);\r\n            let res = await fetchData.data;\r\n            // console.log(res);\r\n            // console.log('Fetch');\r\n            if(res.success === true){\r\n              setArchives(res.data)  \r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                // console.log(error.response.data);\r\n               // console.log(error.response.status);\r\n                if(error.response.status === 400){\r\n                    setArchives([])  \r\n                  }\r\n                // console.log(error.response.headers);\r\n              } else if (error.request) {\r\n                // The request was made but no response was received\r\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                // http.ClientRequest in node.js\r\n                // console.log(error.request);\r\n              } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                // console.log('Error', error.message);\r\n              }\r\n              // console.log(error.config);\r\n              // console.log(JSON.parse(error.config.data));\r\n        }\r\n    }\r\n\r\n    //\r\n    // ─── FETCH SEARCH ─────────────────────────────────────────────────────────────────\r\n    const fetchSearch = async (search)=>{\r\n        try {\r\n            let url = `/searchpass`;\r\n            let fetchData = await axios.post(url, {search: search});\r\n            let res = await fetchData.data;\r\n            // console.log(res);\r\n            if(res.success === true){\r\n               setSearchres(res.data)\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                // console.log(error.response.data);\r\n                console.log(error.response.status);\r\n            \r\n                // console.log(error.response.headers);\r\n              } else if (error.request) {\r\n                // The request was made but no response was received\r\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                // http.ClientRequest in node.js\r\n                // console.log(error.request);\r\n              } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                // console.log('Error', error.message);\r\n              }\r\n              // console.log(error.config);\r\n              // console.log(JSON.parse(error.config.data));\r\n        }\r\n    }\r\n\r\n   //\r\n   // ─── USE EFFECT ─────────────────────────────────────────────────────────────────\r\n    React.useEffect(()=>{\r\n        fetchArchives();\r\n    },[]);\r\n    \r\n    // Handle Add\r\n    const handleAdd = ()=>{\r\n        setAdd(true);\r\n    }\r\n\r\n    // Handle Add close\r\n    const handleAddClose = ()=>{\r\n        setAdd(false)\r\n    }\r\n\r\n    //\r\n    // ─── SHOW ARCHIVES ──────────────────────────────────────────────────────────────\r\n    \r\n    let showData =  ()=>{\r\n        return  archives.map(a =>{\r\n               return (\r\n                    <Table \r\n                    key={a._id}\r\n                    username={username}\r\n                    name ={a.name}\r\n                    user={a.user}\r\n                    password={a.password}\r\n                    date={a.createdAt}\r\n                    idDb={a._id}\r\n                    fetchArchives={fetchArchives}\r\n                    setMessages={setMessages}\r\n                     />\r\n               )\r\n           })\r\n       }\r\n\r\n    // SHOW SEARCH RESULT\r\n    let showSearch = ()=>{\r\n        return searchres.map(a=>{\r\n           return ( <Table \r\n                    key={a._id}\r\n                    username={username}\r\n                    name ={a.name}\r\n                    user={a.user}\r\n                    password={a.password}\r\n                    date={a.createdAt}\r\n                    idDb={a._id}\r\n                    fetchArchives={fetchArchives}\r\n                    setMessages={setMessages}\r\n                     />\r\n           )\r\n        });\r\n    }\r\n    //\r\n    // ─── RETURN ─────────────────────────────────────────────────────────────────────\r\n    \r\n    return (\r\n        <div className='manager-grid'>\r\n        <div className='manager-add'>\r\n        {add ?\r\n            <span className='add-close' onClick={handleAddClose} role='img' aria-label='add'> ❌ </span>\r\n                :\r\n            <span className='add-open' onClick={handleAdd} role='img' aria-label='add'> ➕ </span>\r\n        }\r\n        </div>\r\n        {add ? \r\n        <Add \r\n        setAdd={setAdd} \r\n        username={username}\r\n        fetchArchives={fetchArchives}\r\n        setMessages={setMessages}\r\n        \r\n        />\r\n        :\r\n        <div className='manager'>\r\n        <Search \r\n        search={search} \r\n        setSearch={setSearch}\r\n        fetchSearch={fetchSearch}\r\n        searchres={searchres}\r\n        setSearchres={setSearchres}\r\n        />\r\n        <div className=\"row\">\r\n            <div className=\"column\">\r\n            <table>\r\n             <thead>\r\n                 <tr>\r\n                 <th>Name</th>\r\n                 <th>User</th>\r\n                 <th>Password</th>\r\n                 <th className='tableDate'>Date</th>\r\n                 <th>Actions</th>\r\n                 </tr>\r\n             </thead>\r\n             {searchres.length > 0 ? \r\n             showSearch()\r\n             :\r\n             showData()\r\n            }\r\n            \r\n             </table>\r\n            </div>\r\n            </div>\r\n            </div>\r\n                  \r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(Manager);","import React from 'react'\r\n\r\nexport default function Nav(props) {\r\n    const {username, handleLogOut, handleLogin} = props;\r\n\r\n\r\n    //\r\n    // ─── RETURN ─────────────────────────────────────────────────────────────────────\r\n    return (\r\n        <>\r\n     <nav>\r\n      <span className=\"logo\" role='img' aria-label='key'>🗝️</span>\r\n     {username !== '' ? \r\n      <>\r\n      <span className='user' role='img' aria-label='alien'>👶 {username}</span>\r\n      <span onClick={handleLogOut} className='exit' role='img' aria-label='logout'>🚪</span>\r\n     </>\r\n       :\r\n       <span onClick={handleLogin} className='enter' role='img' aria-label='logout'>🔞</span>\r\n\r\n    }\r\n    </nav>  \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className='footer'>\r\n                mada with <span role='img' aria-label='heart'>💜</span> by @lexpaper\r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Flash(props) {\r\n    // Deconstruct\r\n    const{messages, setMessages} = props;\r\n//\r\n// ─── STATE ──────────────────────────────────────────────────────────────────────\r\nconst [visibility, setVisibility] = React.useState(false);\r\nconst [type, setType] = React.useState(''); \r\n\r\n//\r\n// ─── DOM MESSAGES ───────────────────────────────────────────────────────────────────\r\n \r\n  let msgs =  messages.map((m, indx)=> {\r\n    return ( <span key={indx}> {m.msg} </span>)  \r\n   });\r\n\r\n //\r\n // ─── ALLERT ─────────────────────────────────────────────────────────────────────\r\n const flashMessage =  (message) =>{\r\n    setVisibility(true);\r\n    // setType(type);\r\n    setTimeout(()=>{\r\n        setVisibility(false);\r\n    },7000)\r\n};\r\n//\r\n// ─── USEEFFECT ──────────────────────────────────────────────────────────────────\r\nReact.useEffect(() => {\r\n   // console.log('Flash')\r\n   flashMessage()\r\n},[messages])\r\n\r\n//\r\n// ─── CLOSE ──────────────────────────────────────────────────────────────────────\r\nReact.useEffect(() => {\r\n    if(document.querySelector('.close') !== null) {\r\n        document.\r\n        querySelector('.close').\r\n        addEventListener('click', () => setVisibility(false));\r\n    }\r\n})\r\n\r\n//\r\n// ─── RETURN ─────────────────────────────────────────────────────────────────────\r\n\r\n    return (\r\n        <div className='msgsContent'>\r\n               {visibility ? \r\n                <div className=\"messages\">{msgs}</div>\r\n                :\r\n                null\r\n            }\r\n                \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Login from './Component/Login';\nimport Signup from './Component/Signup';\nimport axios from 'axios';\nimport video from './bg.mp4'\nimport arrow from './arrows.png';\nimport Manager from './Component/Manager';\nimport Nav from './Component/Nav';\nimport Footer from './Component/Footer';\nimport Flash from './Component/Flash';\n\n\nfunction App() {\n  //\n  // ─── STATE ──────────────────────────────────────────────────────────────────────\n  const [login, setLogin] = React.useState(false);\n  const [signup, setSignup] = React.useState(false);\n  const [username, setUsername] = React.useState('');\n  const [messages, setMessages] = React.useState([{msg:'Wellcome 😀'}]);\n\n     // ─── WHO IS IN ──────────────────────────────────────────────────────────────────\n     let whoisin = async ()=>{\n      try{\n          let url = '/user/whoisin';\n          let whoisFetch = await axios(url);\n          let res = await whoisFetch.data;\n          // console.log(res)\n          if(res.success === true){\n          let userIn = res.data.username;\n          setUsername(userIn);\n          setMessages([{msg:`✋ Wellcome ${username}`}]);\n          }\n          \n      }\n      catch(error){\n\n          if (error.response) {\n              // The request was made and the server responded with a status code\n              // that falls out of the range of 2xx\n            // console.log(error.response.data);\n             if(error.response.data.success === false){\n              setUsername('');\n            }\n              //console.log(error.response.status);\n              // console.log(error.response.headers);\n            } else if (error.request) {\n              // The request was made but no response was received\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n              // http.ClientRequest in node.js\n              // console.log(error.request);\n            } else {\n              // Something happened in setting up the request that triggered an Error\n              // console.log('Error', error.message);\n            }\n            // console.log(error.config);\n      }\n  }\n\n  //\n// ─── FETCH POST ─────────────────────────────────────────────────────────────────\nconst loginPost = async (user)=>{\n  try{\n      let url = '/user/login';\n      let login = await axios.post(url,user);\n      let res = await login.data;\n      // console.log(res);\n      // Messages\n      setMessages([{msg: `${res.msg}`}]);\n      // SET WHO IS IN \n      if(res.success === true){\n        whoisin();\n      }\n  }\n  catch(error){\n      if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n           console.log(error.response.data);\n          const errRes = error.response.data.msg;\n          setMessages([{msg:`💥 ${errRes}`}]);\n         \n          //console.log(error.response.status);\n          // console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          // console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          // console.log('Error', error.message);\n        }\n        // console.log(error.config);\n  }\n  }\n\n\n  // Handle login\n  const handleLogin = ()=>{\n    // Toggle login\n    setLogin(!login)\n  }\n  \n  // Handle Signup\n  const handleSignup = ()=>{\n    // Toggle signup\n    setSignup(!signup)\n  }\n  \n  // LOGOUT\n  const handleLogOut = async ()=>{\n    try{\n      let url = '/user/logout';\n      let logoutRequest = await axios(url);\n      let res = await logoutRequest.data;\n      // console.log(res);\n\n      //  WHO IS IN\n      if(res.success === true){\n      whoisin();\n      setMessages([{msg: `${res.msg}`}])\n      }\n    }\n    catch(error){\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        //console.log(error.response.status);\n        // console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        // console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        // console.log('Error', error.message);\n      }\n      // console.log(error.config);\n    }\n  }\n\n  // USEEFFECT USERNAME\n  React.useEffect(()=>{\n    whoisin();\n    if(username !== ''){\n     // console.log('Use effect')\n      setLogin(false);\n      setSignup(false);\n    }\n  }, [username])\n  \n  //\n  // ─── RETURN ─────────────────────────────────────────────────────────────────────\n  \n  return (\n    <>\n    <Nav \n    username={username} \n    handleLogOut={handleLogOut}\n    handleLogin={handleLogin} \n    />\n    <Flash messages={messages } setMessages={setMessages}/>\n      {login ? \n      <Login \n      setLogin={setLogin}\n      username={username}\n      whoisin = {whoisin}\n      messages={messages}\n      setMessages={setMessages}\n      loginPost={loginPost}\n      /> \n      : signup ? \n      <Signup \n      setSignup={setSignup}\n      whoisin = {whoisin}\n      messages={messages}\n      setMessages={setMessages}\n      />: username !== '' ? \n      <Manager username={username} setMessages={setMessages} /> \n      :\n      <div className=\"App\">\n        <video className='video' src={video} autoPlay muted loop type='mp4'></video>\n        <img className='arrow' src={arrow} alt=\"\"/>\n      <h1 className='title'>Password Manager</h1>\n      <h3>Who are you?</h3>\n      <div className=''><button onClick={handleLogin} className=\"button-large button-outline\">Login</button></div> \n      <div className='or'>or</div>\n      <div> <button onClick={handleSignup} className=\"button-large button-outline\">Sign Up</button></div>\n      <Footer />\n      </div>\n      }\n      \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}